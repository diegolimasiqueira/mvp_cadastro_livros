services:
  postgres:
    image: postgres:16-alpine
    container_name: bookstore-postgres
    environment:
      POSTGRES_DB: bookstoredb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bookstore-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bookstore-backend
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/autores"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bookstore-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bookstore-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - bookstore-network

volumes:
  postgres_data:
    driver: local

networks:
  bookstore-network:
    driver: bridge



